version: "3.9"
services:

  #Nginx Service
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}_nginx
    restart: unless-stopped
    tty: true
    environment:
      - VIRTUAL_PORT=8009
      - VIRTUAL_HOST=cargo.local
    ports:
      - "8009:80"
    links:
      - app
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf:rw
      - ./docker/logs/nginx:/var/logs/nginx:rw
    networks:
        - cargo



  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    links:
#      - postgres
      - redis
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - cargo


  #MySQL Service
  cargo_db:
      image: postgres:15-alpine
      container_name: ${APP_NAME}_postgres
      restart: unless-stopped
      tty: true
      ports:
          - "15432:5432"
      environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - POSTGRES_DB=cargo
      volumes:
         - ./docker/db:/docker-entrypoint-initdb.d
      networks:
         - cargo




  #Redis Service
  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    container_name: ${APP_NAME}_redis
    networks:
       - cargo


#Docker Networks


networks:
  cargo:
    driver: bridge


